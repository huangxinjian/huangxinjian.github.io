(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{228:function(s,t,a){"use strict";a.r(t);var e=a(28),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"反射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射"}},[s._v("#")]),s._v(" 反射")]),s._v(" "),a("p",[s._v("反射是一个可以用来"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("分析类能力")]),s._v("的工具集，通过反射可以编写出动态操纵 Java 代码的程序。反射机制可以用来：")]),s._v(" "),a("ul",[a("li",[s._v("在运行时分析类的能力，因为 "),a("code",[s._v("Class")]),s._v(" 类封装了类的运行时信息")]),s._v(" "),a("li",[s._v("在运行时查看对象")]),s._v(" "),a("li",[s._v("实现通用的数组操作代码")]),s._v(" "),a("li",[s._v("利用 Method 对象，调用函数。")])]),s._v(" "),a("h2",{attrs:{id:"class-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-类"}},[s._v("#")]),s._v(" Class 类")]),s._v(" "),a("p",[s._v("在"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("程序运行期间")]),s._v("，Java 运行时系统始终为"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("所有的对象")]),s._v("维护一个被称为运行时的类型标识。这个信息跟踪着每个对象所属的类，JVM 就是通过这些信息来执行对应的方法的。")]),s._v(" "),a("p",[s._v("另外，还可以通过专门 Java 类来访问这些信息，这个类就是 "),a("code",[s._v("Class")]),s._v(" ，它专门用来保存类的运行时信息。")]),s._v(" "),a("h3",{attrs:{id:"获取-class-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取-class-对象"}},[s._v("#")]),s._v(" 获取 Class 对象")]),s._v(" "),a("p",[s._v("有三种方式可以获取到 Class 对象实例，分别是：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("obj.getClass()")])]),s._v(" "),a("li",[a("code",[s._v("Class.forName()")])]),s._v(" "),a("li",[a("code",[s._v("类名.class")])])]),s._v(" "),a("h3",{attrs:{id:"class-forname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-forname"}},[s._v("#")]),s._v(" Class.forName")]),s._v(" "),a("p",[a("code",[s._v("Class.forName(String className)")]),s._v(" ,这是 Class 类的一个静态方法，通过提供一个字符串来获取 Class 对象，例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java.util.Random"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" clazz "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("错误情况")]),s._v(" "),a("p",[s._v("当提供的 "),a("code",[s._v("name")]),s._v(" 不是类名或接口名时，会报 checkedException 检查时异常")])]),s._v(" "),a("h3",{attrs:{id:"getclass-和-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getclass-和-class"}},[s._v("#")]),s._v(" getClass() 和 .class")]),s._v(" "),a("p",[s._v("这两种方法都可以获取到 "),a("code",[s._v("Class")]),s._v(" 对象，不过会有一些区别。")]),s._v(" "),a("p",[s._v("首先，我们需要知道，当调用某个类/接口/数组 C 的 "),a("code",[s._v(".class")]),s._v(" 操作时，得到的是一个 "),a("code",[s._v("Class<C>")]),s._v(" 的类对象")]),s._v(" "),a("blockquote",[a("p",[s._v("The type of C.class, where C is the name of a class, interface, or array type (§4.3), is Class<C>.")])]),s._v(" "),a("p",[s._v("但是当调用 "),a("code",[s._v("getClass")]),s._v(" 方法时，获取到的 Class 对象是 "),a("code",[s._v("Class<? extends |T|>")]),s._v(" 。即该 Class 对象是一个属于类 T 或其子类的类对象。")]),s._v(" "),a("blockquote",[a("p",[s._v("The type of a method invocation expression of getClass is Class<? extends |T|>, where T is the class or interface that was searched for getClass (§15.12.1) and |T| denotes the erasure of T (§4.6).")])]),s._v(" "),a("p",[s._v("具体通过下面例子来理解一下，首先存在这么两个类")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ....")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Doctor")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ....")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("然后编写一个测试方法：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Doctor")]),s._v(" doctor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Doctor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),s._v(" employee "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("doctor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// code 1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// code 2")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("doctor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// code 3 ，compiler error！！")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("其中只有 "),a("code",[s._v("code1")]),s._v(" 、"),a("code",[s._v("code2")]),s._v(" 能正常执行，而 "),a("code",[s._v("code3")]),s._v(" 会编译错误。这是因为对于操作符 "),a("code",[s._v("==")]),s._v(" ，存在这样的限制：")]),s._v(" "),a("blockquote",[a("p",[s._v("It is a compile-time error if it is impossible to convert the type of either operand to the type of the other by a casting conversion (§5.5). The run-time values of the two operands would necessarily be unequal (ignoring the case where both values are null).")])]),s._v(" "),a("p",[s._v("接着分析一下三段 Code 比较的是什么类型，是否能转换：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("doctor.getClass()")]),s._v(" 得到的是 "),a("code",[s._v("Class<? extends Doctor>")]),s._v(" , 而 "),a("code",[s._v("new Employee().getClass()")]),s._v(" 得到的是 "),a("code",[s._v("Class<? extends Employee>")]),s._v(" ，其中 Doctor 类型可以通过强制转换转为父类对象，因为 Employee 有可能也是 Doctor。")]),s._v(" "),a("li",[a("code",[s._v("employee.getClass()")]),s._v(" 得到的是 "),a("code",[s._v("Class<? extends Employee>")]),s._v(", 而 "),a("code",[s._v("Employee.class")]),s._v(" 得到的是 "),a("code",[s._v("Class<Employee>")]),s._v(", 与上面的同理")]),s._v(" "),a("li",[a("code",[s._v("doctor.getClass()")]),s._v(" 得到的是 "),a("code",[s._v("Class<? extends Doctor>")]),s._v("，而 "),a("code",[s._v("Employee.class")]),s._v(" 得到的是 "),a("code",[s._v("Class<Employee>")]),s._v("，它们之间无法做任何的强制转换，因为"),a("code",[s._v("Class<? extends Doctor>")]),s._v("有可能是 "),a("code",[s._v("Class<Doctor>")]),s._v(" 或者 "),a("code",[s._v("Class<Surgeon>")]),s._v(" ，但不可能是 "),a("code",[s._v("Class<Employee>")]),s._v("，因为 "),a("code",[s._v("Employee")]),s._v(" 并不是 Doctor 的子类。所以编译器会发生编译错误，因为这样的比较是没有意义的，百分百错误的。")])]),s._v(" "),a("p",[s._v("如果需要第三个案例也通过，可以在调用 "),a("code",[s._v("getClass")]),s._v(" 之前，先将 "),a("code",[s._v("doctor")]),s._v(" 对象，强转为 "),a("code",[s._v("Employee")]),s._v(" 对象 ：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("doctor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("但是这个是没有意义的。")]),s._v(" "),a("h3",{attrs:{id:"获取类的名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取类的名称"}},[s._v("#")]),s._v(" 获取类的名称")]),s._v(" "),a("p",[s._v("可以通过 Class 对象实例的 "),a("code",[s._v("getName")]),s._v(" 方法获取到完整的带有包名的类名。例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),s._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" cName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// cName is set to "java.util.Random"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"通过class实例创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过class实例创建对象"}},[s._v("#")]),s._v(" 通过Class实例创建对象")]),s._v(" "),a("p",[s._v("这个方法比较常用，叫做 "),a("code",[s._v("newInstance")]),s._v(" ，它可以动态的创建一个类的实例，例如 ：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这样就可以创建一个与对象 "),a("code",[s._v("e")]),s._v(" 具有相同类型的实例，"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("该方法调用默认的构造器，因此如果类中没有提供默认的构造器，则会报出异常")]),s._v("。")]),s._v(" "),a("p",[s._v("通常可以结合 "),a("code",[s._v("forName")]),s._v(" 使用：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" cname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java.util.Random"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),s._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"class-常用api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-常用api"}},[s._v("#")]),s._v(" Class 常用API")]),s._v(" "),a("p",[s._v("API查询： https://docs.oracle.com/javase/8/docs/api/")]),s._v(" "),a("h3",{attrs:{id:"getfield"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getfield"}},[s._v("#")]),s._v(" getField")]),s._v(" "),a("p",[a("code",[s._v("getField")]),s._v(" 返回一个包含Field对象的数组 "),a("code",[s._v("Field[]")]),s._v("，并且返回的都是 "),a("code",[s._v("public")]),s._v(" 的域。")]),s._v(" "),a("ul",[a("li",[s._v("如果没有 "),a("code",[s._v("public")]),s._v(" 域，则此方法返回长度为0的数组")]),s._v(" "),a("li",[s._v("如果此Class对象表示一个类，则此方法返回该类及其所有超类的"),a("code",[s._v("Public")]),s._v(" 域。")]),s._v(" "),a("li",[s._v("如果此Class对象表示 "),a("code",[s._v("数组类型")]),s._v("， "),a("code",[s._v("基本数据类型")]),s._v(" 或 "),a("code",[s._v("void")]),s._v(" ，则此方法返回长度为0的数组。")])]),s._v(" "),a("h3",{attrs:{id:"getfiled-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getfiled-name"}},[s._v("#")]),s._v(" getFiled(name)")]),s._v(" "),a("p",[a("code",[s._v("Filed getFiled(name)")]),s._v(" : 返回给定名称的公有域")]),s._v(" "),a("h3",{attrs:{id:"getdeclaredfields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getdeclaredfields"}},[s._v("#")]),s._v(" getDeclaredFields")]),s._v(" "),a("p",[a("code",[s._v("getDeclareFields")]),s._v(" 返回一个 Field 数组 "),a("code",[s._v("Field[]")]),s._v("。这包括公共，受保护，默认（程序包）访问和私有字段，但不包括继承的字段。")]),s._v(" "),a("h3",{attrs:{id:"getdeclaredfield-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getdeclaredfield-name"}},[s._v("#")]),s._v(" getDeclaredField(name)")]),s._v(" "),a("p",[a("code",[s._v("Filed getDeclaredField(name)")]),s._v(" : 返回给定名称的域")]),s._v(" "),a("h3",{attrs:{id:"getmethod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getmethod"}},[s._v("#")]),s._v(" getMethod")]),s._v(" "),a("p",[s._v("该方法可以获取指定方法的 "),a("code",[s._v("Method")]),s._v(" 对象 ：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Method")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" parameterType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("例如要获取 "),a("code",[s._v("Employee")]),s._v(" 的 "),a("code",[s._v("setName")]),s._v(" 方法：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Method")]),s._v(" method "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"setName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"getmethods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getmethods"}},[s._v("#")]),s._v(" getMethods")]),s._v(" "),a("p",[s._v("返回包含 Method 对象的数组 , 返回所有的 "),a("code",[s._v("public")]),s._v(" 方法，包括父类的。")]),s._v(" "),a("h3",{attrs:{id:"getdeclaremethods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getdeclaremethods"}},[s._v("#")]),s._v(" getDeclareMethods")]),s._v(" "),a("p",[s._v("返回包含 Method 对象的数组 , 返回这个类的或接口的全部方法，不包括继承的。")]),s._v(" "),a("h3",{attrs:{id:"getconstructors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getconstructors"}},[s._v("#")]),s._v(" getConstructors")]),s._v(" "),a("p",[s._v("返回包含 Constructor 对象的数组：")]),s._v(" "),a("p",[a("code",[s._v("Constructor[] getConstructors")]),s._v("： 返回 Class 对象所描述的类的所有 "),a("code",[s._v("public")]),s._v(" 构造器")]),s._v(" "),a("h3",{attrs:{id:"getdeclaredconstructors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getdeclaredconstructors"}},[s._v("#")]),s._v(" getDeclaredConstructors")]),s._v(" "),a("p",[a("code",[s._v("Constructor[] getDeclaredConstructors")]),s._v(" ：返回Class 对象所描述的类的所有构造器")]),s._v(" "),a("h3",{attrs:{id:"invoke"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invoke"}},[s._v("#")]),s._v(" invoke 💥")]),s._v(" "),a("p",[s._v("这个方法可以用来调用 Method 对象对应的方法，并返回方法的返回值，对于静态方法，隐式参数传递 "),a("code",[s._v("null")]),s._v(" ，如果返回类型是基本类型，"),a("code",[s._v("invoke")]),s._v(" 则会返回其包装类")]),s._v(" "),a("p",[s._v("方法签名如下：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中，"),a("code",[s._v("obj")]),s._v(" 是隐式参数，"),a("code",[s._v("args")]),s._v(" 是显式参数。")]),s._v(" "),a("h2",{attrs:{id:"field-常用api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#field-常用api"}},[s._v("#")]),s._v(" Field 常用API")]),s._v(" "),a("h3",{attrs:{id:"get-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-obj"}},[s._v("#")]),s._v(" get(obj)")]),s._v(" "),a("p",[s._v("方法签名： "),a("code",[s._v("Object get(Object obj)")]),s._v(" ，用来获取这个域对象在 "),a("code",[s._v("obj")]),s._v(" 中对应的值。例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),s._v(" employee "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mike"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" clazz "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Field")]),s._v(" field "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" clazz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDeclaredField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    field"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setAccessible")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" field"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"set-object-newvalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-object-newvalue"}},[s._v("#")]),s._v(" set(Object , newValue)")]),s._v(" "),a("p",[s._v("方法签名 ： "),a("code",[s._v("void set(Object object, Object newValue)")]),s._v(", 通过这个方法，可以给对象 "),a("code",[s._v("object")]),s._v(" 对应的域设置一个新值。")]),s._v(" "),a("p",[s._v("最终得到的对象 "),a("code",[s._v("val")]),s._v(" 的值就是 "),a("code",[s._v("mike")]),s._v(" 了。")]),s._v(" "),a("h2",{attrs:{id:"method-常用api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#method-常用api"}},[s._v("#")]),s._v(" Method 常用API")]),s._v(" "),a("h3",{attrs:{id:"getexceptiontype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getexceptiontype"}},[s._v("#")]),s._v(" getExceptionType")]),s._v(" "),a("p",[s._v("返回一个用于描述方法抛出的异常类型的 Class 对象数组。"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("意思就是，返回这个异常对应的 Class 对象，但是因为异常可能抛出多个，所以返回一个数组。")])]),s._v(" "),a("h3",{attrs:{id:"getreturntype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getreturntype"}},[s._v("#")]),s._v(" getReturnType")]),s._v(" "),a("p",[s._v("方法签名： "),a("code",[s._v("Class getReturnType")]),s._v(" : 获取这个方法的返回值类型对应的 Class 对象。")]),s._v(" "),a("h3",{attrs:{id:"getparametertypes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getparametertypes"}},[s._v("#")]),s._v(" getParameterTypes")]),s._v(" "),a("p",[s._v("方法签名： "),a("code",[s._v("Class[] getParameterTypes")]),s._v(" :返回参数类型对应的 Class 数组。")]),s._v(" "),a("h2",{attrs:{id:"constructor-常用api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor-常用api"}},[s._v("#")]),s._v(" Constructor 常用API")]),s._v(" "),a("h3",{attrs:{id:"getexceptiontype-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getexceptiontype-2"}},[s._v("#")]),s._v(" getExceptionType")]),s._v(" "),a("p",[s._v("返回一个用于描述方法抛出的异常类型的 Class 对象数组。"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("意思就是，返回这个异常对应的 Class 对象，但是因为异常可能抛出多个，所以返回一个数组。")])]),s._v(" "),a("h2",{attrs:{id:"域、方法、构造器通用-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#域、方法、构造器通用-api"}},[s._v("#")]),s._v(" 域、方法、构造器通用 API")]),s._v(" "),a("h3",{attrs:{id:"getdeclaringclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getdeclaringclass"}},[s._v("#")]),s._v(" getDeclaringClass")]),s._v(" "),a("p",[s._v("方法签名： "),a("code",[s._v("Class getDeclaringClass")]),s._v(" , 返回这个域所属的 Class 对象")]),s._v(" "),a("h3",{attrs:{id:"getname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getname"}},[s._v("#")]),s._v(" getName")]),s._v(" "),a("p",[s._v("方法签名： "),a("code",[s._v("String getName")]),s._v("，返回一个描述构造器、方法或域名的字符串。")]),s._v(" "),a("ul",[a("li",[s._v("域： 返回属性的名称")]),s._v(" "),a("li",[s._v("方法： 返回方法的名称")]),s._v(" "),a("li",[s._v("构造器： 返回构造器的名称")])]),s._v(" "),a("h3",{attrs:{id:"getmodifiers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getmodifiers"}},[s._v("#")]),s._v(" getModifiers()")]),s._v(" "),a("p",[s._v("方法签名 :"),a("code",[s._v("int getModifiers")]),s._v(" ,返回一个用来描述构造器、方法、域的修饰符的整形数值。即通过它可以知道这三种元素被哪些关键字修饰，例如 "),a("code",[s._v("public")]),s._v("、"),a("code",[s._v("final")]),s._v("、"),a("code",[s._v("static")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("Class 对象也可以使用这个方法")])]),s._v(" "),a("h2",{attrs:{id:"modifiers-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modifiers-api"}},[s._v("#")]),s._v(" Modifiers API")]),s._v(" "),a("p",[s._v("这些方法全部都是静态方法，可以直接通过类名调用")]),s._v(" "),a("h3",{attrs:{id:"tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[s._v("#")]),s._v(" toString")]),s._v(" "),a("p",[s._v("返回一个组合了 "),a("code",[s._v("private")]),s._v(" 、"),a("code",[s._v("public")]),s._v("、"),a("code",[s._v("static")]),s._v("、"),a("code",[s._v("final")]),s._v("等等的一个字符串，具体返回哪个，根据 "),a("code",[s._v("getModifiers")]),s._v(" 方法返回的整形数值运算得出。")]),s._v(" "),a("h3",{attrs:{id:"isxxx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isxxx"}},[s._v("#")]),s._v(" isXXX")]),s._v(" "),a("p",[s._v("这里的 "),a("code",[s._v("XXX")]),s._v(" 就是对对应的关键字，包括：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("boolean isAbstract(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isStatic(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isFinal(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isInterface(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isNative(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isPublic(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isPrivate(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isProtected(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isStrict(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isSynchronized(int modifiers)")])]),s._v(" "),a("li",[a("code",[s._v("boolean isVolatile(int modifiers)")])])]),s._v(" "),a("p",[s._v("这些方法将检测方法名中对应的修饰符是否有包含，包含则返回 true。")]),s._v(" "),a("h2",{attrs:{id:"accessibleobject-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessibleobject-api"}},[s._v("#")]),s._v(" AccessibleObject API")]),s._v(" "),a("p",[a("code",[s._v("AccessibleObject")]),s._v(" 类是 "),a("code",[s._v("Field")]),s._v("、"),a("code",[s._v("Method")]),s._v(" 和 "),a("code",[s._v("Constructor")]),s._v(" 对象的基类。它提供了将反射的对象标记为在"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("使用时取消默认 Java 语言访问控制检查的能力")]),s._v("。对于公共成员、默认（打包）访问成员、受保护成员和私有成员，在分别使用 "),a("code",[s._v("Field")]),s._v("、"),a("code",[s._v("Method")]),s._v(" 或 "),a("code",[s._v("Constructor")]),s._v(" 对象来设置或获得字段、调用方法，或者创建和初始化类的新实例的时候，会执行访问检查。")]),s._v(" "),a("p",[s._v("在反射对象中设置 accessible 标志允许具有足够特权的复杂应用程序（比如 Java Object Serialization 或其他持久性机制）以某种通常禁止使用的方式来操作对象。")]),s._v(" "),a("p",[s._v("因此，实际上setAccessible是启用和禁用访问安全检查的开关,并不是为true就能访问为false就不能访问。由于JDK的安全检查耗时较多.所以通过setAccessible(true)的方式关闭安全检查就可以达到提升反射速度的目的")]),s._v(" "),a("h3",{attrs:{id:"setaccessible-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setaccessible-boolean"}},[s._v("#")]),s._v(" setAccessible(boolean)")]),s._v(" "),a("p",[s._v("为反射对象设置可访问的标识，当传递 "),a("code",[s._v("true")]),s._v(" 时，代表屏蔽 Java 语言的访问检查，使得"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("对象的私有属性也可以被查询和设置")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"isaccessible"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isaccessible"}},[s._v("#")]),s._v(" isAccessible")]),s._v(" "),a("p",[s._v("返回反射对象的可访问标志的值，可访问为 true，不可访问为 false")]),s._v(" "),a("h3",{attrs:{id:"setaccessible-accessibleobject-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setaccessible-accessibleobject-boolean"}},[s._v("#")]),s._v(" setAccessible(AccessibleObject[] , boolean)")]),s._v(" "),a("p",[s._v("这是一个静态方法，通过传入一个 "),a("code",[s._v("AccessibleObject")]),s._v(" 对象的数组，来集体设置可访问标识的快捷方法。例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDeclaredFields")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccessibleObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setsetAccessible")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这样就可以批量设置全部访问权限为 "),a("code",[s._v("true")])])])}),[],!1,null,null,null);t.default=n.exports}}]);