(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{223:function(s,t,a){"use strict";a.r(t);var e=a(28),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-索引"}},[s._v("#")]),s._v(" MySQL 索引")]),s._v(" "),a("p",[s._v("什么是索引？索引是一种能够加快数据查询效率的数据结构，说通俗些，索引就相当于是字典上的目录，通过目录可以快速定位到对应的单词。")]),s._v(" "),a("h2",{attrs:{id:"索引的好处和坏处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的好处和坏处"}},[s._v("#")]),s._v(" 索引的好处和坏处")]),s._v(" "),a("p",[s._v("虽然说索引可以加快数据查询的速度，但索引并不是说越多越好，因为索引也是会占据存储空间的，如果盲目的建立索引，会导致数据文件变得很大。")]),s._v(" "),a("p",[s._v("而且，"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("索引虽然能加快查询速度，但是会降低增删改的速度")]),s._v("，因为每个索引都是维护了一颗索引树 "),a("code",[s._v("B+ Tree")]),s._v(" ，每当有新的数据插入时，所有的索引树都必须插入这条新的数据，导致得重新调整树的结构。")]),s._v(" "),a("h2",{attrs:{id:"索引的种类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的种类"}},[s._v("#")]),s._v(" 索引的种类")]),s._v(" "),a("p",[s._v("MySQL 中索引有许多种，并且这些索引的都是属于存储引擎的，"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("不同的存储引擎的索引是不一样的")]),s._v("，例如：")]),s._v(" "),a("ul",[a("li",[s._v("单列索引")]),s._v(" "),a("li",[s._v("组合索引")]),s._v(" "),a("li",[s._v("全文索引")]),s._v(" "),a("li",[s._v("空间索引")]),s._v(" "),a("li",[s._v("位图索引（Oracle）")])]),s._v(" "),a("h3",{attrs:{id:"单列索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单列索引"}},[s._v("#")]),s._v(" 单列索引")]),s._v(" "),a("p",[s._v("单列索引共有三种：")]),s._v(" "),a("ul",[a("li",[s._v("唯一索引")]),s._v(" "),a("li",[s._v("全文索引")]),s._v(" "),a("li",[s._v("普通索引")])]),s._v(" "),a("h4",{attrs:{id:"普通索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#普通索引"}},[s._v("#")]),s._v(" 普通索引")]),s._v(" "),a("p",[s._v("普通索引的创建方式如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"唯一索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#唯一索引"}},[s._v("#")]),s._v(" 唯一索引")]),s._v(" "),a("p",[s._v("唯一索引的创建方式如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" index_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"全文索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全文索引"}},[s._v("#")]),s._v(" 全文索引")]),s._v(" "),a("p",[s._v("全文索引的创建方式如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" FULLTEXT "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" fulltext index_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"组合索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合索引"}},[s._v("#")]),s._v(" 组合索引")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" article "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_titme_time "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" tuser "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_name_age_sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"索引的删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的删除"}},[s._v("#")]),s._v(" 索引的删除")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"索引查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引查看"}},[s._v("#")]),s._v(" 索引查看")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"索引原理分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引原理分析"}},[s._v("#")]),s._v(" 索引原理分析")]),s._v(" "),a("h3",{attrs:{id:"索引数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引数据结构"}},[s._v("#")]),s._v(" 索引数据结构")]),s._v(" "),a("p",[s._v("在 MySQL 中，"),a("code",[s._v("InnoDB")]),s._v(" 和 "),a("code",[s._v("MyISAM")]),s._v(" 这两个存储引擎的数据结构都是 "),a("code",[s._v("B+ Tree")]),s._v("，而 "),a("code",[s._v("Memory")]),s._v(" 则支持 "),a("code",[s._v("hash")]),s._v(" 和 "),a("code",[s._v("b+ tree")]),s._v(".")]),s._v(" "),a("h3",{attrs:{id:"b-和-b的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-和-b的区别"}},[s._v("#")]),s._v(" B+ 和 B的区别")]),s._v(" "),a("blockquote",[a("p",[s._v("数据结构网站： https://www.cs.usfca.edu/~galles/visualization/Algorithms.html")])]),s._v(" "),a("p",[a("code",[s._v("B+ tree")]),s._v(" 的存储图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/mysql_img/b+tree.png",alt:"img"}})]),s._v(" "),a("p",[a("code",[s._v("B tree")]),s._v(" 的存储图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/mysql_img/btree.jpg",alt:"img"}})]),s._v(" "),a("p",[s._v("可以看到，两者的区别是：")]),s._v(" "),a("ul",[a("li",[a("strong",{staticStyle:{color:"#3EAF7C"}},[a("code",[s._v("B+ Tree")]),s._v(" 只有叶子节点存储数据，并且是按照顺序排序的，而且叶子节点是一个链表，左叶子指向右叶子，")])]),s._v(" "),a("li",[a("code",[s._v("BTree")]),s._v(" 则在所有节点上都会存储数据，其图示如下：")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/mysql_img/btree2.png",alt:"img"}})]),s._v(" "),a("h2",{attrs:{id:"非聚集索引（myisam）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非聚集索引（myisam）"}},[s._v("#")]),s._v(" 非聚集索引（MyISAM）")]),s._v(" "),a("p",[s._v("非聚集索引是 "),a("code",[s._v("MyISAM")]),s._v(" 中的索引特点，其含义是，"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("索引树下存储的值并不是数据记录的值，而是数据记录的地址")]),s._v("，例如:")]),s._v(" "),a("p",[a("img",{attrs:{src:"/mysql_img/myisam.png",alt:"img"}})]),s._v(" "),a("p",[s._v("因此查询时，需要先通过索引树找到对应索引，然后再找到索引对应的数据的地址值，最后再根据地址值找到对应的数据内容。"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("其中索引树是文件 "),a("code",[s._v(".myi")]),s._v(" 的内容，右边的数据表是文件 "),a("code",[s._v(".myd")]),s._v(" 的内容。")])]),s._v(" "),a("h2",{attrs:{id:"聚集索引（innodb）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚集索引（innodb）"}},[s._v("#")]),s._v(" 聚集索引（InnoDB）")]),s._v(" "),a("p",[s._v("聚集索引是 "),a("code",[s._v("InnoDB")]),s._v(" 中的索引特点，"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("其主键索引树下存储的值就是完整的数据内容，辅助索引树下存储的值是主键的值。")])]),s._v(" "),a("h3",{attrs:{id:"主键索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主键索引"}},[s._v("#")]),s._v(" 主键索引")]),s._v(" "),a("p",[s._v("主键索引图如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/mysql_img/innodb.png",alt:"img"}})]),s._v(" "),a("p",[s._v("当建表指定主键时，就会生成这样一颗主键索引树，如果在建表时没有指定主键，"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("就会先寻找唯一索引，将其作为主键，如果没有唯一索引，则会生成一个 "),a("code",[s._v("rowid")]),s._v(" 伪列作为主键。")])]),s._v(" "),a("h3",{attrs:{id:"主键的选型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主键的选型"}},[s._v("#")]),s._v(" 主键的选型")]),s._v(" "),a("p",[s._v("因为主键索引树是一定会存在的，因此主键的选型就变得重要，因为"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("它会影响数据文件的大小")]),s._v("。")]),s._v(" "),a("p",[s._v("首先不推荐 "),a("code",[s._v("uuid")]),s._v(" 作为主键，因为它太大了，会占据很大的空间，比较推荐使用自增主键，这样不需要在每次新增数据时，都去比较主键的大小，而是直接追加即可，可以大大加快插入的速度。")]),s._v(" "),a("p",[s._v("对于分布式系统来说，主键 id 需要通过雪花算法来进行计算，否则会重复。")]),s._v(" "),a("h3",{attrs:{id:"页分裂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页分裂"}},[s._v("#")]),s._v(" 页分裂")]),s._v(" "),a("p",[s._v("当在插入数据的时候，如果不是自增主键的话，需要先判断出索引的位置在哪，如果刚好要插入的这一数据页的空间满了， 根据 B+ 树的算法，此时需要新增一个数据页，并且进行数据的移动，这个过程就称为"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("页分裂")]),s._v("。")]),s._v(" "),a("p",[s._v("因此这种情况就会影响到 mysql 的性能，并且还会降低空间的利用率，原本放在一个页的数据，现在分到两个页中，整体空间利用率降低大约 50%。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("MySQL 默认一个数据页是 16K 大小，这个指标可以通过改变 "),a("code",[s._v("innodb_page_size")]),s._v(" 选项对默认大小进行修改")]),s._v("。")])]),s._v(" "),a("h3",{attrs:{id:"辅助索引（非主键索引）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#辅助索引（非主键索引）"}},[s._v("#")]),s._v(" 辅助索引（非主键索引）")]),s._v(" "),a("p",[s._v("辅助索引与主键索引的区别就是，"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("辅助索引上叶子节点挂载的值是主键，而不是整条记录")]),s._v("，图示如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/mysql_img/innodb2.png",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"组合索引-todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合索引-todo"}},[s._v("#")]),s._v(" 组合索引 :todo:")]),s._v(" "),a("h3",{attrs:{id:"回表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回表"}},[s._v("#")]),s._v(" 回表")]),s._v(" "),a("p",[s._v("首先看这么一条 SQL 语句, 其中 "),a("code",[s._v("name")]),s._v(" 是普通索引，"),a("code",[s._v("id")]),s._v(" 是主键索引")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Alice'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("当指定条件 "),a("code",[s._v("name=Alice")]),s._v(" 时，会去查辅助索引树，然后得到主键的 "),a("code",[s._v("ID")]),s._v("，接着再去主键索引树上进行查找，得到结果，这个过程就称为"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("回表")]),s._v("。")]),s._v(" "),a("p",[s._v("当发生回表时，需要查询两颗索引树，这样也会影响性能的，这时候就可以通过使用"),a("strong",{staticStyle:{color:"#3EAF7C"}},[s._v("覆盖索引")]),s._v("来进行优化了。")]),s._v(" "),a("h3",{attrs:{id:"覆盖索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引"}},[s._v("#")]),s._v(" 覆盖索引")]),s._v(" "),a("p",[s._v("覆盖索引，其实就是避免回表操作，尽量在一颗索引树上就得到我们想要的结果。例如上面的 SQL ，如果我们只需要查询 "),a("code",[s._v("id")]),s._v(" ，就不用回表了，这样也算使用到了覆盖索引：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Alice'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其次也可以通过 "),a("code",[s._v("联合索引")]),s._v(" 来使用到覆盖索引，例如需要查询 "),a("code",[s._v("ID")]),s._v("、"),a("code",[s._v("age")]),s._v("、"),a("code",[s._v("name")]),s._v("，就可以创建一个联合索引 "),a("code",[s._v("(name, age)")]),s._v(" ,这样索引树上就可以挂载三个信息 "),a("code",[s._v("(name, age) -> id")]),s._v(" :")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/89/70/89f74c631110cfbc83298ef27dcd6370.jpg",alt:"IMG"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);